"""Remove unused columns.

Revision ID: f47e6e86bea8
Revises: 03d388ba77ea
Create Date: 2023-02-28 10:19:29.878345

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = 'f47e6e86bea8'
down_revision = '03d388ba77ea'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('auctions', schema=None) as batch_op:
        batch_op.drop_index('ix_auctions_contribution_payment_request')
        batch_op.drop_constraint('auctions_seller_id_fkey', type_='foreignkey')
        batch_op.drop_column('contribution_requested_at')
        batch_op.drop_column('contribution_payment_request')
        batch_op.drop_column('contribution_settled_at')
        batch_op.drop_column('contribution_amount')
        batch_op.drop_column('shipping_estimate_worldwide')
        batch_op.drop_column('shipping_from')
        batch_op.drop_column('shipping_estimate_domestic')
        batch_op.drop_column('seller_id')
        batch_op.drop_column('title')
        batch_op.drop_column('description')

    with op.batch_alter_table('media', schema=None) as batch_op:
        batch_op.drop_constraint('media_auction_id_fkey', type_='foreignkey')
        batch_op.drop_column('auction_id')

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('media', schema=None) as batch_op:
        batch_op.add_column(sa.Column('auction_id', sa.INTEGER(), autoincrement=False, nullable=True))
        batch_op.create_foreign_key('media_auction_id_fkey', 'auctions', ['auction_id'], ['id'])

    with op.batch_alter_table('auctions', schema=None) as batch_op:
        batch_op.add_column(sa.Column('description', sa.VARCHAR(length=21000), server_default=sa.text("''::character varying"), autoincrement=False, nullable=True))
        batch_op.add_column(sa.Column('title', sa.VARCHAR(length=210), server_default=sa.text("''::character varying"), autoincrement=False, nullable=True))
        batch_op.add_column(sa.Column('seller_id', sa.INTEGER(), autoincrement=False, nullable=True))
        batch_op.add_column(sa.Column('shipping_estimate_domestic', sa.VARCHAR(length=64), autoincrement=False, nullable=True))
        batch_op.add_column(sa.Column('shipping_from', sa.VARCHAR(length=64), autoincrement=False, nullable=True))
        batch_op.add_column(sa.Column('shipping_estimate_worldwide', sa.VARCHAR(length=64), autoincrement=False, nullable=True))
        batch_op.add_column(sa.Column('contribution_amount', sa.INTEGER(), autoincrement=False, nullable=True))
        batch_op.add_column(sa.Column('contribution_settled_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True))
        batch_op.add_column(sa.Column('contribution_payment_request', sa.VARCHAR(length=512), autoincrement=False, nullable=True))
        batch_op.add_column(sa.Column('contribution_requested_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True))
        batch_op.create_foreign_key('auctions_seller_id_fkey', 'users', ['seller_id'], ['id'])
        batch_op.create_index('ix_auctions_contribution_payment_request', ['contribution_payment_request'], unique=False)

    # ### end Alembic commands ###
