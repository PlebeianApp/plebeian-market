version: '3.6'

services:
  db:
    volumes:
      - target: /var/lib/postgresql/data
        type: tmpfs
    ports:
      - "5432:5432"
  api:
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000/api/healthcheck"]
      interval: 3s
      timeout: 3s
      retries: 5
    env_file: .env.dev
    ports:
      - "5000:5000"
    volumes:
      - "./api:/app"
    command: bash -c "flask db upgrade && python3 ./main.py"
  finalize-auctions:
    depends_on:
      api: # this is because in dev & test mode, the api is the one initializing the database, on start
        condition: service_healthy
    env_file: .env.dev
    volumes:
      - "./api:/app"
    command: flask finalize-auctions
  settle-btc-payments:
    depends_on:
      api: # this is because in dev & test mode, the api is the one initializing the database, on start
        condition: service_healthy
    env_file: .env.dev
    volumes:
      - "./api:/app"
    command: flask settle-btc-payments
  process-notifications:
    depends_on:
      api: # this is because in dev & test mode, the api is the one initializing the database, on start
        condition: service_healthy
    env_file: .env.dev
    volumes:
      - "./api:/app"
    command: flask process-notifications
  birdwatcher:
    depends_on:
      api: # because birdwatcher *actually* needs the API to know what to work on!
        condition: service_healthy
    env_file: .env.dev
    volumes:
      - "./birdwatcher:/app"
    command: python main.py
