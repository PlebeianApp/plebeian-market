version: '3.6'

services:
  db:
    volumes:
      - "/home/www/plebeian-market-dbdata:/var/lib/postgresql/data"
  relay:
    volumes:
      - "/home/www/plebeian-market-relaydata:/app/strfry-db"
    ports:
      - "7777:7777"
    networks:
      - proxy
  smtp:
    ports:
      - "1587:587"
    environment:
      - ALLOWED_SENDER_DOMAINS=staging.plebeian.market
  api:
    healthcheck:
      test: ["CMD", "curl", "-f", "https://staging.plebeian.market/api/status"]
      interval: 3s
      timeout: 3s
      retries: 5
    env_file: .env.staging
    environment:
      - S3_FILENAME_PREFIX=STAGING_
    volumes:
      - "/home/www/plebeian-market-secrets:/secrets"
      - "/home/www/plebeian-market-state:/state"
    command: gunicorn --chdir /app main:app -w 2 --threads 2 -b 0.0.0.0:8080
  web:
    build:
      context: ./
      dockerfile: web/Dockerfile
      args:
        - BUILD_MODE=-staging
    env_file: .env.staging
    restart: always
    depends_on:
      - api
    networks:
      - proxy
    volumes:
      - "buyer-app-static-content:/buyer-app"
  nginx:
    build:
      context: ./
      dockerfile: ./services/nginx/Dockerfile
    restart: always
    environment:
      - VIRTUAL_HOST=staging.plebeian.market
      - LETSENCRYPT_HOST=staging.plebeian.market
    depends_on:
      - api
      - web
    networks:
      - proxy
    volumes:
      - "buyer-app-static-content:/buyer-app"
      - "/home/www/plebeian-market-state/media:/media"
  finalize-auctions:
    env_file: .env.staging
    volumes:
      - "/home/www/plebeian-market-secrets:/secrets"
      - "/home/www/plebeian-market-state:/state"
    command: flask finalize-auctions
  settle-btc-payments:
    env_file: .env.staging
    volumes:
      - "/home/www/plebeian-market-secrets:/secrets"
      - "/home/www/plebeian-market-state:/state"
    command: flask settle-btc-payments
  settle-lightning-payments:
    env_file: .env.staging
    volumes:
      - "/home/www/plebeian-market-secrets:/secrets"
      - "/home/www/plebeian-market-state:/state"
      - "./api:/app"
    command: flask settle-lightning-payments
  birdwatcher:
    env_file: .env.staging
    volumes:
      - "/home/www/plebeian-market-secrets:/secrets"
      - "/home/www/plebeian-market-state:/state"
    command: python main.py

networks:
  proxy:
    external: true

volumes:
  buyer-app-static-content:
