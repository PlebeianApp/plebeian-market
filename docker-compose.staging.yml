version: '3.6'

services:
  db:
    volumes:
      - "/home/www/plebeian-market-dbdata:/var/lib/postgresql/data"
  api:
    healthcheck:
      test: ["CMD", "curl", "-f", "https://staging.plebeian.market/api/healthcheck"]
      interval: 3s
      timeout: 3s
      retries: 5
    env_file: .env.staging
    environment:
      - S3_FILENAME_PREFIX=STAGING_
      - MODERATOR_USER_IDS=ALL
    volumes:
      - "/home/www/plebeian-market-secrets:/secrets"
    command: gunicorn --chdir /app main:app -w 2 --threads 2 -b 0.0.0.0:8080
  web:
    build:
      context: ./
      dockerfile: ./web/Dockerfile
      args:
        - BUILD_MODE=-staging
    depends_on:
      - api
    networks:
      - proxy
  nginx:
    build:
      context: ./
      dockerfile: ./services/nginx/Dockerfile
    environment:
      - VIRTUAL_HOST=staging.plebeian.market
      - LETSENCRYPT_HOST=staging.plebeian.market
    depends_on:
      - api
    networks:
      - proxy
  finalize-auctions:
    env_file: .env.staging
    volumes:
      - "/home/www/plebeian-market-secrets:/secrets"
    command: flask finalize-auctions
  settle-btc-payments:
    env_file: .env.staging
    volumes:
      - "/home/www/plebeian-market-secrets:/secrets"
    command: flask settle-btc-payments
  settle-lnd-payments:
    env_file: .env.staging
    volumes:
      - "/home/www/plebeian-market-secrets:/secrets"
    command: flask settle-lnd-payments
  process-notifications:
    env_file: .env.staging
    volumes:
      - "/home/www/plebeian-market-secrets:/secrets"
    command: flask process-notifications
  birdwatcher:
    depends_on:
      api:
        condition: service_healthy
    env_file: .env.staging
    volumes:
      - "/home/www/plebeian-market-secrets:/secrets"
    command: python main.py

networks:
  proxy:
    external: true
